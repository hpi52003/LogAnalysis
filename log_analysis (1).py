# -*- coding: utf-8 -*-
"""Log Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uL_UJPlM4zabItD8aQN01H1vAumZazrV
"""

import re
import csv
from collections import Counter

# Function to parse the log file
def parse_log_file(log_file):
    with open(log_file, 'r') as file:
        logs = file.readlines()
    return logs

# Function to count requests per IP
def count_requests_per_ip(logs):
    ip_pattern = re.compile(r'(\d+\.\d+\.\d+\.\d+)')
    ip_addresses = [ip_pattern.search(log).group(1) for log in logs if ip_pattern.search(log)]
    return Counter(ip_addresses).items()

# Function to find the most frequently accessed endpoint
def find_frequent_endpoint(logs):
    pattern = re.compile(r'\"[A-Z]+\s(\/[^\s]*)\sHTTP\/')
    endpoints = [pattern.search(log).group(1) for log in logs if pattern.search(log)]
    if endpoints:
      common_endpoint = Counter(endpoints).most_common(1)[0]
      return common_endpoint
    return None

# Function to detect suspicious activities
def detect_suspicious_activity(logs):
    failed_login_pattern = re.compile(r'Failed login.*from\s(\d+\.\d+\.\d+\.\d+)')
    failed_logins = [failed_login_pattern.search(log).group(1) for log in logs if failed_login_pattern.search(log)]
    return Counter(failed_logins).items()

# Function to save results to a CSV file
def save_to_csv(ip_requests, frequent_endpoint, suspicious_activities, output_file='log_analysis_results.csv'):
    with open(output_file, 'w', newline='') as csv_file:
        writer = csv.writer(csv_file)

        # Write Requests per IP section
        writer.writerow(['Requests per IP'])
        writer.writerow(['IP Address', 'Request Count'])
        writer.writerows(ip_requests)
        writer.writerow([])  # Add an empty row for separation

        # Write Most Accessed Endpoint section
        writer.writerow(['Most Accessed Endpoint'])
        writer.writerow(['Endpoint', 'Access Count'])
        if frequent_endpoint:
            writer.writerow([frequent_endpoint[0], frequent_endpoint[1]])
        else:
            writer.writerow(['No endpoint found', '0'])
        writer.writerow([])  # Add an empty row for separation

        # Write Suspicious Activity section
        writer.writerow(['Suspicious Activity'])
        writer.writerow(['IP Address', 'Failed Login Count'])
        if suspicious_activities:
            writer.writerows(suspicious_activities)
        else:
            writer.writerow(['No suspicious activity detected', '0'])

# Main function to execute the analysis
def main():
    log_file = 'sample.log'  # Replace with your log file name
    logs = parse_log_file(log_file)

    # Analyze log data
    ip_requests = count_requests_per_ip(logs)
    frequent_endpoint = find_frequent_endpoint(logs)
    suspicious_activities = detect_suspicious_activity(logs)

    # Save results to CSV
    save_to_csv(ip_requests, frequent_endpoint, suspicious_activities)

if __name__ == "__main__":
    main()